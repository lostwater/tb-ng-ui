{"version":3,"sources":["./src/app/modules/home/components/widget/lib/analogue-radial-gauge.ts","./src/app/modules/home/components/widget/lib/analogue-radial-gauge.models.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG;AACH,iDAAiD;AACjD,GAAG;AACH,mEAAmE;AACnE,oEAAoE;AACpE,2CAA2C;AAC3C,GAAG;AACH,kDAAkD;AAClD,GAAG;AACH,uEAAuE;AACvE,qEAAqE;AACrE,4EAA4E;AAC5E,uEAAuE;AACvE,kCAAkC;AAClC,GAAG;;AAE2C;AAIoB;AAGkB;AACpF,IAAO,WAAW,GAAG,yDAAwB,CAAC;AAI9C,IAAM,sCAAsC,GAAG,qIAAoC,EAAE,CAAC;AAEtF,WAAW;AACX;IAA2C,uFAAgE;IAMzG,+BAAY,GAAkB,EAAE,QAAgB;eAC9C,kBAAM,GAAG,EAAE,QAAQ,CAAC;IACtB,CAAC;IAND,sBAAW,uCAAc;aAAzB;YACE,OAAO,sCAAsC,CAAC;QAChD,CAAC;;;OAAA;IAMS,mDAAmB,GAA7B,UAA8B,QAAqC,EAAE,SAA6B;QAChG,SAAS,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,IAAI,GAAG,CAAC;QAClD,SAAS,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,IAAI,EAAE,CAAC;QAEjD,SAAS;QAET,SAAS,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC7C,SAAS,CAAC,yBAAyB,GAAG,MAAM,CAAC;QAC7C,SAAS,CAAC,sBAAsB,GAAG,SAAS,CAAC,CAAC,6DAA6D;QAC3G,SAAS,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAEhD,SAAS;QACT,SAAS,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,IAAI,EAAE,CAAC;QAC7D,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACnC,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAEnC,oBAAoB;QACpB,SAAS,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,sBAAsB;IAC9D,CAAC;IAES,2CAAW,GAArB,UAAsB,SAA6B;QACjD,OAAO,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAEH,4BAAC;AAAD,CAAC,CAlC0C,iGAAe,GAkCzD;;;;;;;;;;;;;;ACjED;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG;AACH,iDAAiD;AACjD,GAAG;AACH,mEAAmE;AACnE,oEAAoE;AACpE,2CAA2C;AAC3C,GAAG;AACH,kDAAkD;AAClD,GAAG;AACH,uEAAuE;AACvE,qEAAqE;AACrE,4EAA4E;AAC5E,uEAAuE;AACvE,kCAAkC;AAClC,GAAG;;AAGoH;AAC/E;AAQjC,SAAS,oCAAoC;IAClD,IAAM,iCAAiC,GAAG,6DAAS,CAAC,6GAA2B,CAAC,CAAC;IACjF,iCAAiC,CAAC,MAAM,CAAC,UAAU,qHAC/C,iCAAiC,CAAC,MAAM,CAAC,UAAU,GAAK;QACrD,UAAU,EAAE;YACX,KAAK,EAAE,mBAAmB;YAC1B,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,EAAE;SACZ;QACD,UAAU,EAAE;YACV,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,GAAG;SACb;QACD,gBAAgB,EAAE;YAChB,KAAK,EAAE,oBAAoB;YAC3B,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,EAAE;SAClB;KAAC,CAAC,CAAC;IACJ,iCAAiC,CAAC,IAAI,CAAC,OAAO,CAC5C,YAAY,EACZ,YAAY,EACZ,kBAAkB,CACnB,CAAC;IACF,OAAO,iCAAiC,CAAC;AAC3C,CAAC","file":"home-components-widget-lib-analogue-radial-gauge.js","sourcesContent":["///\n/// Copyright © 2016-2021 The Thingsboard Authors\n///\n/// Licensed under the Apache License, Version 2.0 (the \"License\");\n/// you may not use this file except in compliance with the License.\n/// You may obtain a copy of the License at\n///\n///     http://www.apache.org/licenses/LICENSE-2.0\n///\n/// Unless required by applicable law or agreed to in writing, software\n/// distributed under the License is distributed on an \"AS IS\" BASIS,\n/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n/// See the License for the specific language governing permissions and\n/// limitations under the License.\n///\n\nimport * as CanvasGauges from 'canvas-gauges';\nimport {\n  AnalogueRadialGaugeSettings,\n  getAnalogueRadialGaugeSettingsSchema\n} from '@home/components/widget/lib/analogue-radial-gauge.models';\nimport { JsonSettingsSchema } from '@shared/models/widget.models';\nimport { WidgetContext } from '@home/models/widget-component.models';\nimport { TbAnalogueGauge } from '@home/components/widget/lib/analogue-gauge.models';\nimport RadialGauge = CanvasGauges.RadialGauge;\nimport RadialGaugeOptions = CanvasGauges.RadialGaugeOptions;\nimport BaseGauge = CanvasGauges.BaseGauge;\n\nconst analogueRadialGaugeSettingsSchemaValue = getAnalogueRadialGaugeSettingsSchema();\n\n// @dynamic\nexport class TbAnalogueRadialGauge extends TbAnalogueGauge<AnalogueRadialGaugeSettings, RadialGaugeOptions>{\n\n  static get settingsSchema(): JsonSettingsSchema {\n    return analogueRadialGaugeSettingsSchemaValue;\n  }\n\n  constructor(ctx: WidgetContext, canvasId: string) {\n    super(ctx, canvasId);\n  }\n\n  protected prepareGaugeOptions(settings: AnalogueRadialGaugeSettings, gaugeData: RadialGaugeOptions) {\n    gaugeData.ticksAngle = settings.ticksAngle || 270;\n    gaugeData.startAngle = settings.startAngle || 45;\n\n    // colors\n\n    gaugeData.colorNeedleCircleOuter = '#f0f0f0';\n    gaugeData.colorNeedleCircleOuterEnd = '#ccc';\n    gaugeData.colorNeedleCircleInner = '#e8e8e8'; // tinycolor(keyColor).lighten(30).toRgbString(),//'#e8e8e8',\n    gaugeData.colorNeedleCircleInnerEnd = '#f5f5f5';\n\n    // needle\n    gaugeData.needleCircleSize = settings.needleCircleSize || 10;\n    gaugeData.needleCircleInner = true;\n    gaugeData.needleCircleOuter = true;\n\n    // custom animations\n    gaugeData.animationTarget = 'needle'; // 'needle' or 'plate'\n  }\n\n  protected createGauge(gaugeData: RadialGaugeOptions): BaseGauge {\n    return new RadialGauge(gaugeData);\n  }\n\n}\n","///\n/// Copyright © 2016-2021 The Thingsboard Authors\n///\n/// Licensed under the Apache License, Version 2.0 (the \"License\");\n/// you may not use this file except in compliance with the License.\n/// You may obtain a copy of the License at\n///\n///     http://www.apache.org/licenses/LICENSE-2.0\n///\n/// Unless required by applicable law or agreed to in writing, software\n/// distributed under the License is distributed on an \"AS IS\" BASIS,\n/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n/// See the License for the specific language governing permissions and\n/// limitations under the License.\n///\n\nimport { JsonSettingsSchema } from '@shared/models/widget.models';\nimport { AnalogueGaugeSettings, analogueGaugeSettingsSchema } from '@home/components/widget/lib/analogue-gauge.models';\nimport { deepClone } from '@core/utils';\n\nexport interface AnalogueRadialGaugeSettings extends AnalogueGaugeSettings {\n  startAngle: number;\n  ticksAngle: number;\n  needleCircleSize: number;\n}\n\nexport function getAnalogueRadialGaugeSettingsSchema(): JsonSettingsSchema {\n  const analogueRadialGaugeSettingsSchema = deepClone(analogueGaugeSettingsSchema);\n  analogueRadialGaugeSettingsSchema.schema.properties =\n  {...analogueRadialGaugeSettingsSchema.schema.properties, ...{\n         startAngle: {\n          title: 'Start ticks angle',\n          type: 'number',\n          default: 45\n        },\n        ticksAngle: {\n          title: 'Ticks angle',\n          type: 'number',\n          default: 270\n        },\n        needleCircleSize: {\n          title: 'Needle circle size',\n          type: 'number',\n          default: 10\n  }}};\n  analogueRadialGaugeSettingsSchema.form.unshift(\n    'startAngle',\n    'ticksAngle',\n    'needleCircleSize'\n  );\n  return analogueRadialGaugeSettingsSchema;\n}\n"],"sourceRoot":"webpack:///"}