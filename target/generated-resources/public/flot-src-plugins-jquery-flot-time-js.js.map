{"version":3,"sources":["./node_modules/flot/src/plugins/jquery.flot.time.js"],"names":["$","options","xaxis","timezone","timeformat","twelveHourClock","monthNames","floorInBase","n","base","Math","floor","formatDate","d","fmt","dayNames","isFunction","strftime","leftPad","pad","length","r","escape","hours","getHours","isAM","c","hours12","i","charAt","getDay","getMonth","getDate","getMinutes","getSeconds","getFullYear","push","join","makeUtcWrapper","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","apply","arguments","utc","date","undefined","props","p","dateGenerator","ts","opts","Date","timezoneJS","setTimezone","setTime","timeUnitSize","baseSpec","specMonths","concat","specQuarters","init","plot","hooks","processOptions","each","getAxes","axisName","axis","mode","tickGenerator","ticks","min","minSize","spec","tickSize","minTickSize","delta","size","unit","magn","pow","log","year","LN10","norm","step","setSeconds","setMinutes","setHours","setMonth","setFullYear","setMilliseconds","minute","hour","day","setDate","month","quarter","carry","v","Number","NaN","prev","getTime","start","end","max","tickFormatter","useQuarters","t","span","suffix","hourCode","rt","plugins","name","version","jQuery"],"mappings":"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","file":"flot-src-plugins-jquery-flot-time-js.js","sourcesContent":["/* Pretty handling of time axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n    var options = {\n        xaxis: {\n            timezone: null,        // \"browser\" for local to the client or timezone for timezone-js\n            timeformat: null,    // format string to use\n            twelveHourClock: false,    // 12 or 24 time in time mode\n            monthNames: null    // list of names of months\n        }\n    };\n\n    // round to nearby lower multiple of base\n\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n    // Returns a string with the date d formatted according to fmt.\n    // A subset of the Open Group's strftime format is supported.\n\n    function formatDate(d, fmt, monthNames, dayNames) {\n\n        if ($.isFunction(d.strftime)) {\n            return d.strftime(fmt);\n        }\n\n        var leftPad = function(n, pad) {\n                n = \"\" + n;\n                pad = \"\" + (pad == null ? \"0\" : pad);\n                return n.length === 1 ? pad + n : n;\n            },\n            r = [],\n            escape = false,\n            hours = d.getHours(),\n            isAM = hours < 12,\n            c, hours12;\n\n        if (monthNames == null) {\n            monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        }\n\n        if (dayNames == null) {\n            dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        }\n\n        if (hours > 12) {\n            hours12 = hours - 12;\n        } else if (hours === 0) {\n            hours12 = 12;\n        } else {\n            hours12 = hours;\n        }\n\n        for (var i = 0; i < fmt.length; ++i) {\n\n            c = fmt.charAt(i);\n\n            if (escape) {\n                switch (c) {\n                case \"a\":\n                    c = \"\" + dayNames[d.getDay()];\n                    break;\n                case \"b\":\n                    c = \"\" + monthNames[d.getMonth()];\n                    break;\n                case \"d\":\n                    c = leftPad(d.getDate());\n                    break;\n                case \"e\":\n                    c = leftPad(d.getDate(), \" \");\n                    break;\n                case \"h\": // For back-compat with 0.7; remove in 1.0\n                case \"H\":\n                    c = leftPad(hours);\n                    break;\n                case \"I\":\n                    c = leftPad(hours12);\n                    break;\n                case \"l\":\n                    c = leftPad(hours12, \" \");\n                    break;\n                case \"m\":\n                    c = leftPad(d.getMonth() + 1);\n                    break;\n                case \"M\":\n                    c = leftPad(d.getMinutes());\n                    break;\n                // quarters not in Open Group's strftime specification\n                case \"q\":\n                    c = \"\" + (Math.floor(d.getMonth() / 3) + 1);\n                    break;\n                case \"S\":\n                    c = leftPad(d.getSeconds());\n                    break;\n                case \"y\":\n                    c = leftPad(d.getFullYear() % 100);\n                    break;\n                case \"Y\":\n                    c = \"\" + d.getFullYear();\n                    break;\n                case \"p\":\n                    c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\");\n                    break;\n                case \"P\":\n                    c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\");\n                    break;\n                case \"w\":\n                    c = \"\" + d.getDay();\n                    break;\n                }\n                r.push(c);\n                escape = false;\n            } else {\n                if (c === \"%\") {\n                    escape = true;\n                } else {\n                    r.push(c);\n                }\n            }\n        }\n\n        return r.join(\"\");\n    }\n\n    // To have a consistent view of time-based data independent of which time\n    // zone the client happens to be in we need a date-like object independent\n    // of time zones.  This is done through a wrapper that only calls the UTC\n    // versions of the accessor methods.\n\n    function makeUtcWrapper(d) {\n\n        function addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n            sourceObj[sourceMethod] = function() {\n                return targetObj[targetMethod].apply(targetObj, arguments);\n            };\n        }\n\n        var utc = {\n            date: d\n        };\n\n        // support strftime, if found\n\n        if (d.strftime !== undefined) {\n            addProxyMethod(utc, \"strftime\", d, \"strftime\");\n        }\n\n        addProxyMethod(utc, \"getTime\", d, \"getTime\");\n        addProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n        var props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n        for (var p = 0; p < props.length; p++) {\n            addProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n            addProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n        }\n\n        return utc;\n    }\n\n    // select time zone strategy.  This returns a date-like object tied to the\n    // desired timezone\n\n    function dateGenerator(ts, opts) {\n        if (opts.timezone === \"browser\") {\n            return new Date(ts);\n        } else if (!opts.timezone || opts.timezone === \"utc\") {\n            return makeUtcWrapper(new Date(ts));\n        } else if (typeof timezoneJS !== \"undefined\" && typeof timezoneJS.Date !== \"undefined\") {\n            var d = new timezoneJS.Date();\n            // timezone-js is fickle, so be sure to set the time zone before\n            // setting the time.\n            d.setTimezone(opts.timezone);\n            d.setTime(ts);\n            return d;\n        } else {\n            return makeUtcWrapper(new Date(ts));\n        }\n    }\n\n    // map of app. size of time units in milliseconds\n\n    var timeUnitSize = {\n            \"second\": 1000,\n            \"minute\": 60 * 1000,\n            \"hour\": 60 * 60 * 1000,\n            \"day\": 24 * 60 * 60 * 1000,\n            \"month\": 30 * 24 * 60 * 60 * 1000,\n            \"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n            \"year\": 365.2425 * 24 * 60 * 60 * 1000\n        },\n\n        // the allowed tick sizes, after 1 year we use\n        // an integer algorithm\n\n        baseSpec = [\n            [1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n            [30, \"second\"],\n            [1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n            [30, \"minute\"],\n            [1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n            [8, \"hour\"], [12, \"hour\"],\n            [1, \"day\"], [2, \"day\"], [3, \"day\"],\n            [0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n            [2, \"month\"]\n        ],\n\n        // we don't know which variant(s) we'll need yet, but generating both is\n        // cheap\n\n        specMonths = baseSpec.concat([\n            [3, \"month\"],\n            [6, \"month\"],\n            [1, \"year\"]\n        ]),\n        specQuarters = baseSpec.concat([\n            [1, \"quarter\"],\n            [2, \"quarter\"],\n            [1, \"year\"]\n        ]);\n\n    function init(plot) {\n        plot.hooks.processOptions.push(function(plot) {\n            $.each(plot.getAxes(), function(axisName, axis) {\n\n                var opts = axis.options;\n\n                if (opts.mode === \"time\") {\n                    axis.tickGenerator = function(axis) {\n\n                        var ticks = [],\n                            d = dateGenerator(axis.min, opts),\n                            minSize = 0,\n\n                            // make quarter use a possibility if quarters are\n                            // mentioned in either of these options\n\n                            spec = (opts.tickSize && opts.tickSize[1] ===\n                            \"quarter\") ||\n                            (opts.minTickSize && opts.minTickSize[1] ===\n                            \"quarter\") ? specQuarters : specMonths;\n\n                        if (opts.minTickSize != null) {\n                            if (typeof opts.tickSize === \"number\") {\n                                minSize = opts.tickSize;\n                            } else {\n                                minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n                            }\n                        }\n\n                        for (var i = 0; i < spec.length - 1; ++i) {\n                            if (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]] +\n                                spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2 &&\n                                spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n                                break;\n                            }\n                        }\n\n                        var size = spec[i][0],\n                            unit = spec[i][1];\n\n                        // special-case the possibility of several years\n\n                        if (unit === \"year\") {\n\n                            // if given a minTickSize in years, just use it,\n                            // ensuring that it's an integer\n\n                            if (opts.minTickSize != null && opts.minTickSize[1] === \"year\") {\n                                size = Math.floor(opts.minTickSize[0]);\n                            } else {\n\n                                var magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10)),\n                                    norm = (axis.delta / timeUnitSize.year) / magn;\n\n                                if (norm < 1.5) {\n                                    size = 1;\n                                } else if (norm < 3) {\n                                    size = 2;\n                                } else if (norm < 7.5) {\n                                    size = 5;\n                                } else {\n                                    size = 10;\n                                }\n\n                                size *= magn;\n                            }\n\n                            // minimum size for years is 1\n\n                            if (size < 1) {\n                                size = 1;\n                            }\n                        }\n\n                        axis.tickSize = opts.tickSize || [size, unit];\n                        var tickSize = axis.tickSize[0];\n                        unit = axis.tickSize[1];\n\n                        var step = tickSize * timeUnitSize[unit];\n\n                        if (unit === \"second\") {\n                            d.setSeconds(floorInBase(d.getSeconds(), tickSize));\n                        } else if (unit === \"minute\") {\n                            d.setMinutes(floorInBase(d.getMinutes(), tickSize));\n                        } else if (unit === \"hour\") {\n                            d.setHours(floorInBase(d.getHours(), tickSize));\n                        } else if (unit === \"month\") {\n                            d.setMonth(floorInBase(d.getMonth(), tickSize));\n                        } else if (unit === \"quarter\") {\n                            d.setMonth(3 * floorInBase(d.getMonth() / 3,\n                                tickSize));\n                        } else if (unit === \"year\") {\n                            d.setFullYear(floorInBase(d.getFullYear(), tickSize));\n                        }\n\n                        // reset smaller components\n\n                        d.setMilliseconds(0);\n\n                        if (step >= timeUnitSize.minute) {\n                            d.setSeconds(0);\n                        }\n                        if (step >= timeUnitSize.hour) {\n                            d.setMinutes(0);\n                        }\n                        if (step >= timeUnitSize.day) {\n                            d.setHours(0);\n                        }\n                        if (step >= timeUnitSize.day * 4) {\n                            d.setDate(1);\n                        }\n                        if (step >= timeUnitSize.month * 2) {\n                            d.setMonth(floorInBase(d.getMonth(), 3));\n                        }\n                        if (step >= timeUnitSize.quarter * 2) {\n                            d.setMonth(floorInBase(d.getMonth(), 6));\n                        }\n                        if (step >= timeUnitSize.year) {\n                            d.setMonth(0);\n                        }\n\n                        var carry = 0,\n                            v = Number.NaN,\n                            prev;\n\n                        do {\n\n                            prev = v;\n                            v = d.getTime();\n                            ticks.push(v);\n\n                            if (unit === \"month\" || unit === \"quarter\") {\n                                if (tickSize < 1) {\n\n                                    // a bit complicated - we'll divide the\n                                    // month/quarter up but we need to take\n                                    // care of fractions so we don't end up in\n                                    // the middle of a day\n\n                                    d.setDate(1);\n                                    var start = d.getTime();\n                                    d.setMonth(d.getMonth() + (unit === \"quarter\" ? 3 : 1));\n                                    var end = d.getTime();\n                                    d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n                                    carry = d.getHours();\n                                    d.setHours(0);\n                                } else {\n                                    d.setMonth(d.getMonth() +\n                                        tickSize * (unit === \"quarter\" ? 3 : 1));\n                                }\n                            } else if (unit === \"year\") {\n                                d.setFullYear(d.getFullYear() + tickSize);\n                            } else {\n                                d.setTime(v + step);\n                            }\n                        } while (v < axis.max && v !== prev);\n\n                        return ticks;\n                    };\n\n                    axis.tickFormatter = function(v, axis) {\n\n                        var d = dateGenerator(v, axis.options);\n\n                        // first check global format\n\n                        if (opts.timeformat != null) {\n                            return formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n                        }\n\n                        // possibly use quarters if quarters are mentioned in\n                        // any of these places\n\n                        var useQuarters = (axis.options.tickSize &&\n                                axis.options.tickSize[1] === \"quarter\") ||\n                                (axis.options.minTickSize &&\n                                axis.options.minTickSize[1] === \"quarter\"),\n                            t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]],\n                            span = axis.max - axis.min,\n                            suffix = (opts.twelveHourClock) ? \" %p\" : \"\",\n                            hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\",\n                            fmt;\n\n                        if (t < timeUnitSize.minute) {\n                            fmt = hourCode + \":%M:%S\" + suffix;\n                        } else if (t < timeUnitSize.day) {\n                            if (span < 2 * timeUnitSize.day) {\n                                fmt = hourCode + \":%M\" + suffix;\n                            } else {\n                                fmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n                            }\n                        } else if (t < timeUnitSize.month) {\n                            fmt = \"%b %d\";\n                        } else if ((useQuarters && t < timeUnitSize.quarter) ||\n                            (!useQuarters && t < timeUnitSize.year)) {\n                            if (span < timeUnitSize.year) {\n                                fmt = \"%b\";\n                            } else {\n                                fmt = \"%b %Y\";\n                            }\n                        } else if (useQuarters && t < timeUnitSize.year) {\n                            if (span < timeUnitSize.year) {\n                                fmt = \"Q%q\";\n                            } else {\n                                fmt = \"Q%q %Y\";\n                            }\n                        } else {\n                            fmt = \"%Y\";\n                        }\n\n                        var rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n                        return rt;\n                    };\n                }\n            });\n        });\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: \"time\",\n        version: \"1.0\"\n    });\n\n    // Time-axis support used to be in Flot core, which exposed the\n    // formatDate function on the plot object.  Various plugins depend\n    // on the function, so we need to re-expose it here.\n\n    $.plot.formatDate = formatDate;\n\n})(jQuery);\n"],"sourceRoot":"webpack:///"}